// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UiDesktopApp2.DataAccess;

#nullable disable

namespace UiDesktopApp2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250202150758_result_details")]
    partial class result_details
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("UiDesktopApp2.DataAccess.Entities.ImageSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("TestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("ImageSets");
                });

            modelBuilder.Entity("UiDesktopApp2.DataAccess.Entities.ImageVariant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImageSetId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ImageSetId");

                    b.ToTable("ImageVariants");
                });

            modelBuilder.Entity("UiDesktopApp2.DataAccess.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("UiDesktopApp2.DataAccess.Entities.Result", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PersonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TestId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("UiDesktopApp2.DataAccess.Entities.ResultImageSetTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImageSetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResultId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Seconds")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ResultId");

                    b.ToTable("ResultImageSetTimes");
                });

            modelBuilder.Entity("UiDesktopApp2.DataAccess.Entities.ResultImageVariantTime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImageVariantId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResultId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Seconds")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ResultId");

                    b.ToTable("ResultImageVariantTimes");
                });

            modelBuilder.Entity("UiDesktopApp2.DataAccess.Entities.Test", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("UiDesktopApp2.DataAccess.Entities.ImageSet", b =>
                {
                    b.HasOne("UiDesktopApp2.DataAccess.Entities.Test", "Test")
                        .WithMany("ImageSets")
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Test");
                });

            modelBuilder.Entity("UiDesktopApp2.DataAccess.Entities.ImageVariant", b =>
                {
                    b.HasOne("UiDesktopApp2.DataAccess.Entities.ImageSet", "ImageSet")
                        .WithMany("ImageVariants")
                        .HasForeignKey("ImageSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImageSet");
                });

            modelBuilder.Entity("UiDesktopApp2.DataAccess.Entities.ResultImageSetTime", b =>
                {
                    b.HasOne("UiDesktopApp2.DataAccess.Entities.Result", "Result")
                        .WithMany()
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Result");
                });

            modelBuilder.Entity("UiDesktopApp2.DataAccess.Entities.ResultImageVariantTime", b =>
                {
                    b.HasOne("UiDesktopApp2.DataAccess.Entities.Result", "Result")
                        .WithMany()
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Result");
                });

            modelBuilder.Entity("UiDesktopApp2.DataAccess.Entities.ImageSet", b =>
                {
                    b.Navigation("ImageVariants");
                });

            modelBuilder.Entity("UiDesktopApp2.DataAccess.Entities.Test", b =>
                {
                    b.Navigation("ImageSets");
                });
#pragma warning restore 612, 618
        }
    }
}
